package com.dhl.ocnt.dao;

public class ConstantsDao {

	public static final String HU_TYPE = "hu_type";
	public static final String MOVEMENT_DAYS = "movement_days";

	public static final String INSERT_HU_IN_HU = "INSERT INTO HU_IN_HU ("
			+ "PARENT_HU_ID, CHILD_HU_ID, CONTAINERIZATION_DT, DECONTAINERIZATION_DT, POSITION) "
			+ "VALUES (?, ?, ?, ?, ?)";

	public static final String UPDATE_HU_IN_HU_DECONTAINERIZATION_DT = "UPDATE HU_IN_HU "
			+ "SET DECONTAINERIZATION_DT = ? "
			+ "WHERE PARENT_HU_ID = ? AND CHILD_HU_ID = ?";

	public static final String UPDATE_HU_IN_HU_PARENT_HU_ID = "UPDATE HU_IN_HU "
			+ "SET PARENT_HU_ID = ? " + "WHERE PARENT_HU_ID = ? ";

	public static final String SELECT_HU_STATUS = "SELECT HU_STATUS FROM HANDLING_UNIT WHERE HU_ID = ? AND ORI_FAC_ID = ?";

	public static final String SELECT_BROKEN_FLAG_STATUS = "SELECT HU_BROKEN_FLAG FROM HANDLING_UNIT WHERE HU_ID = ? AND ORI_FAC_ID = ?";

	/**
	 * @deprecated  Use BaggingUnbagging.isHUContainerized instead
	 */
	@Deprecated()
	public static final String SELECT_CONT_STATUS = "SELECT COUNT(1) FROM HANDLING_UNIT HU INNER JOIN HU_IN_HU HIH ON HU.HU_ID = HIH.CHILD_HU_ID "
			+ " WHERE HU.HU_PROCESS_LOCATION = ? AND HU_BROKEN_FLAG = 'N' AND HU.HU_ID = ? ";

	public static final String DELETE_HU_IN_HU_BY_CHILD = "DELETE FROM HU_IN_HU WHERE CHILD_HU_ID = ? ";

	public static final String INSERT_HU = "INSERT INTO HANDLING_UNIT ("
			+ "HU_ID,                           HU_LOAD_DEVICE_REG_NUM,     ORI_FAC_ID, "
			+ "DEST_FAC_ID,                     HU_TYPE_CODE,               HU_DIMENSIONS_UOM, "
			+ "HU_ACTUAL_HEIGHT,                HU_ACTUAL_LENGTH,           HU_ACTUAL_WIDTH, "
			+ "HU_WEIGHT_UOM,                   HU_NET_WEIGHT,              HU_TARE_WEIGHT, "
			+ "HU_TOTAL_WEIGHT,                 HU_VOLUME_PERCENTAGE,       HU_PLANNED_PROFILE_CODE, "
			+ "HU_PLANNED_PROFILE_ORI_FAC_ID,   HU_FLAG,                    HU_POSITIVE_ALLOCATED_IND, "
			+ "CREATED_BY,                      CREATED_DT,                 UPDATED_BY, "
			+ "UPDATED_DT,						HU_PCC_CODE) " + "VALUES (" + "?, ?, ?, "
			+ "?, ?, ?, " + "?, ?, ?, " + "?, ?, ?, " + "?, ?, ?, "
			+ "?, ?, ?, " + "?, ?, ?, " + "?, ?)";

	public static final String SELECT_HU = "SELECT * FROM HANDLING_UNIT WHERE HU_ID = ?";

	public static final String SEARCH_HU = "SELECT * FROM HANDLING_UNIT WHERE HU_ID LIKE ? ";

	public static final String SELECT_HU_WITH_LOCATION = "SELECT * FROM HANDLING_UNIT WHERE HU_ID = ? AND ORI_FAC_ID = ?";

	public static final String SELECT_HU_WITH_LOC = "SELECT A.HU_ID, A.DEST_FAC_ID, A.HU_TYPE_CODE, B.HUPP_DOW, "
			+"A.HU_PLANNED_PROFILE_CODE, A.HU_FLAG FROM "
			+"HANDLING_UNIT A, HU_PLANNED_PROFILE B WHERE A.HU_ID = ? "
			+"AND ORI_FAC_ID = ? AND "
			+"A.HU_PLANNED_PROFILE_CODE = B.HU_PLANNED_PROFILE_CODE";

	public static final String UPDATE_HU = "UPDATE HANDLING_UNIT "
			+ "SET HU_STATUS = ? , "
			+ "HU_PROCESS_LOCATION = ? , "
			+ "HU_TYPE_CODE = CASE WHEN ? IS NULL THEN HU_TYPE_CODE ELSE ? END "
			+ " WHERE HU_ID = ?";

	public static final String UPDATE_HU_DEST_TYPE = "UPDATE HANDLING_UNIT "
			+ "SET DEST_FAC_ID = ? , " + "HU_TYPE_CODE = ? "
			+ "WHERE HU_ID = ? ";

	public static final String UPDATE_HU_WITH_HU_STATUS = "UPDATE HANDLING_UNIT "
			+ "SET HU_STATUS = ? " + " WHERE HU_ID = ?";

	public static final String UPDATE_HU_WITH_HU_BROKEN_FLAG = "UPDATE HANDLING_UNIT "
			+ "SET HU_BROKEN_FLAG = ? " + " WHERE HU_ID = ?";

	public static final String UPDATE_HU_BREAK_SEAL_REASON = "UPDATE HANDLING_UNIT "
			+ "SET HU_BROKEN_SEAL_REASON = ? " + " WHERE HU_ID = ? ";

	public static final String UPDATE_HU_ULD_SAVING = "UPDATE HANDLING_UNIT "
			+ "SET HU_LOAD_DEVICE_REG_NUM = ?, " + "HU_FLAG = ?, "
			+ "HU_POSITIVE_ALLOCATED_IND = ?, " + "HU_VOLUME_PERCENTAGE = ?, "
			+ "HU_TOTAL_WEIGHT = ?, " + "HU_TARE_WEIGHT = ?, "
			+ "HU_NET_WEIGHT = ?, " + "DEST_FAC_ID = ? " + "WHERE HU_ID = ? ";

	public static final String UPDATE_HU_ULD_SAVING_PHY_UNIT_ID = "UPDATE HANDLING_UNIT "
			+ "SET HU_LOAD_DEVICE_REG_NUM = ? " + "WHERE HU_ID = ? ";

	public static final String UPDATE_HU_TYPE = "UPDATE HANDLING_UNIT SET "
			+ "HU_TYPE_CODE = ?" + " WHERE HU_ID = ?";

	public static final String VERIFY_EMPTY_BAG = "SELECT SUM(CNT) AS SUMCNT FROM ( "
			+ " SELECT COUNT(1) AS CNT FROM HU_IN_HU WHERE PARENT_HU_ID = ? "
			+ " UNION "
			+ " SELECT COUNT(1)  AS CNT FROM SHIPMENT_IN_HU WHERE HU_ID = ? "
			+ " UNION "
			+ " SELECT COUNT(1)  AS CNT FROM PIECE_IN_HU WHERE HU_ID = ? ) ";

	public static final String INSERT_PIECE_IN_HU = "INSERT INTO PIECE_IN_HU ("
			+ "PIECE_ID, HU_ID, CONTAINERIZATION_DT) " + "VALUES (?, ?, ?)";

	public static final String UPDATE_PIECE_IN_HU = "UPDATE PIECE_IN_HU "
			+ "SET DECONTAINERIZATION_DT = ? "
			+ "WHERE PIECE_ID = ? AND HU_ID = ?";

	public static final String UPDATE_PIECE_IN_HU_HU_ID = "UPDATE PIECE_IN_HU "
			+ "SET HU_ID = ? " + "WHERE HU_ID = ?";

	public static final String SELECT_PIECE_IN_HU = "SELECT * FROM PIECE_IN_HU WHERE PIECE_ID = ?";

	public static final String SELECT_SHPIMENT_IN_HU = "SELECT * FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ? AND HU_ID = ?";

	public static final String SELECT_PIECE_IN_CONTAINERIZED_HU = "SELECT PIECE_ID, HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ? and decontainerization_dt IS NULL";

	public static final String SELECT_CONTAINERIZED_CHILD_HUID_HU_IN_HU = "SELECT CHILD_HU_ID FROM HU_IN_HU WHERE PARENT_HU_ID = ? and decontainerization_dt IS NULL";

	public static final String DELETE_PIECE_IN_HU = "DELETE FROM PIECE_IN_HU WHERE PIECE_ID = ? ";

	public static final String INSERT_SHIP_IN_HU =

			"INSERT INTO SHIPMENT_IN_HU ("
					+ "HU_ID, SHIPMENT_ID, CONTAINERIZATION_DT) " + "VALUES (?, ?, ?)";

	public static final String SET_ONE_DECONTAINERIZATION_DATE = "UPDATE SHIPMENT_IN_HU "
			+ "SET DECONTAINERIZATION_DT = ? "
			+ "WHERE SHIPMENT_ID = ? AND HU_ID = ? and decontainerization_dt IS NULL and ROWNUM = 1";

	public static final String UPDATE_SHIP_IN_HU_HU_ID = "UPDATE SHIPMENT_IN_HU "
			+ "SET HU_ID = ? " + "WHERE HU_ID = ?";

	public static final String UPDATE_CLOSE_MOVEMENT =

			"UPDATE MOVEMENT SET CLOSE_DT = SYSTIMESTAMP , "
					+ "MVMT_STATUS_CODE = 'C' " + "WHERE MOVEMENT_ID = ? "
					+ "AND ORI_FAC_ID = ? ";

	public static final String UPDATE_MOVEMENT_DEPART_DT =

			"UPDATE MOVEMENT SET DEPART_DT = ? , " +
			"MVMT_STATUS_CODE = 'D' " + "WHERE MOVEMENT_ID = ? "
					+ "AND ORI_FAC_ID = ? ";

	public static final String SELECT_COUNT_SHIP_IN_HU = "SELECT COUNT(*) FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ?";

	public static final String SELECT_CONTAINERIZED_SHIP_ID_SHIP_IN_HU = "SELECT SHIPMENT_ID FROM SHIPMENT_IN_HU WHERE HU_ID = ? and decontainerization_dt IS NULL";

	public static final String SELECT_COUNT_SHIP_IN_HU_HUID = "SELECT COUNT(*) FROM SHIPMENT_IN_HU WHERE HU_ID = ?";

	public static final String SELECT_COUNT_PIECE_IN_HU_HUID = "SELECT COUNT(*) FROM PIECE_IN_HU WHERE HU_ID = ? ";

	public static final String SELECT_CONTAINERIZED_PIECE_ID_PIECE_IN_HU = "SELECT PIECE_ID FROM PIECE_IN_HU WHERE HU_ID = ? and decontainerization_dt IS NULL";

	public static final String DELETE_ONE_SHIP_IN_CONTAINERIZED_HU = "DELETE FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ? AND HU_ID = ? and decontainerization_dt IS NULL and ROWNUM = 1";

	public static final String SELECT_PHYSICAL_REQUIRED = "SELECT HUT_PHYSICAL_NAME_REQUIRED from HU_TYPE where HU_TYPE_CODE= ?";

	/**
	 * selects parent huid of the newest entry for the child huid specified @
	 */
	public static final String SELECT_PARENT_HU_IN_HU_BY_CHILD_HUID = "SELECT * from (SELECT parent_hu_id from HU_IN_HU where CHILD_HU_ID = ? order by containerization_dt desc) WHERE rownum=1";

	public static final String SELECT_COUNT_HU_IN_HU_BY_PARENT_HUID = "SELECT count(*) from HU_IN_HU where PARENT_HU_ID = ?";

	public static final String SELECT_COUNT_HU_IN_MOVEMENT = "SELECT count(*) from HU_IN_MOVEMENT where HU_ID = ? and ORI_FAC_ID = ?";

	public static final String SELECT_HU_IN_MOVEMENT = "SELECT * from HU_IN_MOVEMENT where MOVEMENT_ID = ?";

	public static final String SELECT_HUID_IN_MOVEMENT = "SELECT hu_id from HU_IN_MOVEMENT where movement_id = ? ";

	public static final String DELETE_HU_IN_HU_BY_PARENT = "DELETE HU_IN_HU where PARENT_HU_ID = ?";

	public static final String DELETE_SHIP_IN_HU_BY_HU_ID = "DELETE SHIPMENT_IN_HU where HU_ID = ? ";

	public static final String DELETE_PIECE_IN_HU_BY_HU_ID = "DELETE PIECE_IN_HU where HU_ID = ? ";

	public static final String SELECT_CONT_SETTTINGS = "SELECT VALUE FROM CONT_SETTINGS WHERE FACILITY_ID = ? AND TYPE = ?";

	public static final String SELECT_HU_PLANNED_PROFILES = "SELECT CASE WHEN HU_ID = ? THEN 'P' ELSE 'C' END AS HUTYPE, hupp.* "
			+ "FROM HU_PLANNED_PROFILE hupp "
			+ "WHERE HU_PLANNED_PROFILE_CODE IN "
			+ "(SELECT HU_PLANNED_PROFILE_CODE "
			+ "FROM HANDLING_UNIT "
			+ "WHERE HU_ID IN(?, ?)) "
			+ "INNER JOIN HU_PLANNED_PROFILE_DAY_OF_WEEK huppdow "
			+ "ON hupp.HU_PLANNED_PROFILE_CODE = huppdow.HU_PLANNED_PROFILE_CODE "
			+ "INNER JOIN HU_PLANNED_PROFILE_PRODUCT huppp "
			+ "ON hupp.HU_PLANNED_PROFILE_CODE = hupppp.HU_PLANNED_PROFILE_CODE "
			+ "INNER JOIN HU_PLAN_PROF_PROC_FAC hupppf "
			+ "ON hupp.HU_PLANNED_PROFILE_CODE = huppf.HU_PLANNED_PROFILE_CODE";

	// public static final String SELECT_HU_PLANNED_PROFILE =
	// "SELECT hupp.* "
	//				+ "FROM HU_PLANNED_PROFILE hupp "
	//				+ "WHERE HU_PLANNED_PROFILE_CODE IN "
	//				+ "(SELECT HU_PLANNED_PROFILE_CODE "
	//				+ "FROM HANDLING_UNIT "
	//				+ "WHERE HU_ID = ?) "
	//				+ "INNER JOIN HU_PLANNED_PROFILE_DAY_OF_WEEK huppdow "
	//				+ "ON hupp.HU_PLANNED_PROFILE_CODE = huppdow.HU_PLANNED_PROFILE_CODE "
	//				+ "INNER JOIN HU_PLANNED_PROFILE_PRODUCT huppp "
	//				+ "ON hupp.HU_PLANNED_PROFILE_CODE = hupppp.HU_PLANNED_PROFILE_CODE "
	//				+ "INNER JOIN HU_PLAN_PROF_PROC_FAC hupppf "
	//				+ "ON hupp.HU_PLANNED_PROFILE_CODE = huppf.HU_PLANNED_PROFILE_CODE";
	//

	public static final String SELECT_HU_PLANNED_PROFILE = "SELECT * FROM HU_PLANNED_PROFILE "
			+ "WHERE HU_PLANNED_PROFILE_CODE = "
			+ "(SELECT HU_PLANNED_PROFILE_CODE "
			+ "FROM HANDLING_UNIT "
			+ "WHERE HU_ID = ?) AND HUPP_ORI_FAC_ID = "
			+ "(SELECT ORI_FAC_ID "
			+ "FROM HANDLING_UNIT " + "WHERE HU_ID = ?)";

	public static final String IS_HWB_ALLOWED = "SELECT COUNT(*) "
			+ "FROM HU_PLANNED_PROFILE " + "WHERE HU_PLANNED_PROFILE_CODE IN "
			+ "(SELECT HU_PLANNED_PROFILE_CODE " + "FROM HANDLING_UNIT "
			+ "WHERE HU_ID = ?) " + "AND HUPP_ORI_FAC_ID = "
			+ "(SELECT ORI_FAC_ID " + "FROM HANDLING_UNIT "
			+ "WHERE HU_ID = ?) " + "AND HUPP_ALLOW_HWB='Y' ";

	public static final String SELECT_HWB_FROM_CHILDS = "SELECT COUNT(*) FROM SHIPMENT_IN_HU WHERE HU_ID IN "
			+ "(SELECT CHILD_HU_ID HU_ID FROM HU_IN_HU START WITH "
			+ "PARENT_HU_ID = ? "
			+ "CONNECT BY PRIOR CHILD_HU_ID = PARENT_HU_ID "
			+ "UNION "
			+ "SELECT HU_ID FROM SHIPMENT_IN_HU WHERE HU_ID=?)";

	public static final String VERIFY_MOVEMENT = "SELECT m.*, md.MOVEMENT_DOCUMENT_ID FROM MOVEMENT m INNER JOIN MOVEMENT_DOCUMENT md "
			+ "ON m.MOVEMENT_ID = md.MOVEMENT_ID WHERE m.VEHICLE_ID LIKE ? "
			+ "AND m.ORI_FAC_ID = ? AND m.DEST_FAC_ID LIKE ? "
			+ "AND m.FLEET_TYPE LIKE ? AND m.CLOSE_DT IS NULL";

	public static final String GET_MOVEMENT_LIST = "SELECT "
			+ "MOVEMENT_NUMBER,M.MOVEMENT_ID,FLEET_TYPE,VEHICLE_ID,M.MVMT_SCHD_DEPARTURE_DT, "
			+ "M.DEST_FAC_ID, MOVEMENT_DOCUMENT_ID, MVMT_STATUS_CODE, CLOSE_DT, DEPART_DT, CUT_OFF_TIME "
			+ "FROM MOVEMENT M INNER JOIN MOVEMENT_DOCUMENT MD "
			+ "ON M.MOVEMENT_ID = MD.MOVEMENT_ID WHERE "
			+ "m.MVMT_SCHD_DEPARTURE_DT BETWEEN TRUNC(SYSDATE) -? AND TRUNC(SYSDATE) +? "
			+ "AND m.ORI_FAC_ID=?";

	public static final String GET_MOVEMENT_LIST_ORI_FAC_ID = "SELECT M.MOVEMENT_ID, M.VEHICLE_ID, M.DEST_FAC_ID, M.MVMT_SCHD_DEPARTURE_DT,FLEET_TYPE,CLOSE_DT, DEPART_DT, M.MVMT_STATUS_CODE "
			+ "FROM HU_IN_MOVEMENT HIM, MOVEMENT M "
			+ "WHERE HIM.MOVEMENT_ID = M.MOVEMENT_ID AND HIM.ORI_FAC_ID = M.ORI_FAC_ID "
			+ "AND HIM.ORI_FAC_ID= ? AND M.MVMT_SCHD_DEPARTURE_DT >= ? ";

	public static final String GET_MOVEMENT_LIST_ORI_FAC_ID_APPEND_OPEN = " AND (M.MVMT_STATUS_CODE IS NULL OR M.MVMT_STATUS_CODE = 'O') ";

	//DEPARTED_DT is actually mean movement scheduled take off date time
	// should be GET_MOVEMENT_LIST_ORI_FAC_ID_APPEND_CLOSE_NOT_SCHEDULED, that
	// would be more meaningful
	public static final String GET_MOVEMENT_LIST_ORI_FAC_ID_APPEND_CLOSE_NOT_DEPARTED = " AND M.MVMT_STATUS_CODE = 'C' AND M.DEPART_DT IS NULL ";

	public static final String GET_MOVEMENT_LIST_ORI_FAC_ID_APPEND_CLOSE_SCHEDULED = " AND M.MVMT_STATUS_CODE = 'C' AND M.DEPART_DT IS NOT NULL ";

	public static final String GET_MOVEMENT_LIST_ORI_FAC_ID_APPEND_CLOSE_DEPARTED = " AND M.MVMT_STATUS_CODE = 'D' ";

	public static final String GET_MOVEMENT = "SELECT * FROM MOVEMENT WHERE MOVEMENT_ID = ? AND ORI_FAC_ID = ? ";

	public static final String GET_MOVEMENT_LIST_APPEND = " AND m.MVMT_SCHD_DEPARTURE_DT=?";

	public static final String GET_MOVEMENT_LIST_OFFSET = " AND TRUNC(m.MVMT_SCHD_DEPARTURE_DT)=TRUNC(?)";

	public static final String VERIFY_MAWB = "SELECT COUNT(*) FROM MOVEMENT m LEFT JOIN "
			+ "MOVEMENT_DOCUMENT md ON m.MOVEMENT_ID=md.MOVEMENT_ID "
			+ "WHERE MOVEMENT_DOCUMENT_ID=? AND "
			+ "m.VEHICLE_ID LIKE ? AND "
			+ "md.ORI_FAC_ID LIKE ? AND "
			+ "md.DEST_FAC_ID LIKE ? AND "
			+ "m.FLEET_TYPE LIKE ?";

	public static final String VERIFY_MAWB_APPEND = " AND md.MVMT_SCHD_DEPARTURE_DT=?";

	public static final String SELECT_HU_IN_LOCAL_MOVEMENT = "SELECT COUNT(*) FROM HU_IN_MOVEMENT him INNER JOIN "
			+ "MOVEMENT m ON m.MOVEMENT_ID=him.MOVEMENT_ID "
			+ "WHERE him.HU_ID = ? AND m.ORI_FAC_ID = ?";

	public static final String IS_HU_IN_MOVEMENT = "SELECT COUNT(*) FROM HU_IN_MOVEMENT WHERE ORI_FAC_ID = ? "
			+ " AND MOVEMENT_ID = ?";

	public static final String SELECT_HU_IN_MOVEMENT_DOC = "SELECT COUNT(*) FROM HU_IN_MVMT_DOC "
			+ "WHERE HU_ID = ?";

	public static final String SELECT_IS_HU_CONTAINERIZED = "SELECT COUNT(*) FROM HANDLING_UNIT WHERE ORI_FAC_ID=? AND "
			+ "HU_ID IN ( "
			+ "SELECT HUID "
			+ "FROM ( "
			+ "SELECT FIRST_VALUE(PARENT_HU_ID) OVER (ORDER BY CONTAINERIZATION_DT) AS HUID "
			+ "FROM HU_IN_HU WHERE CHILD_HU_ID = ? "
			+ "UNION "
			+ "SELECT HU_ID AS HUID FROM HU_IN_MOVEMENT WHERE HU_ID = ? AND ORI_FAC_ID = ? ) VW)";

	/**
	 * @deprecated  Use BaggingUnbagging.isPieceContainerized instead
	 */
	@Deprecated()
	public static final String SELECT_IS_PID_CONTAINERIZED = "SELECT COUNT(*) FROM HANDLING_UNIT WHERE ORI_FAC_ID=? AND "
			+ "HU_ID IN ( "
			+ "SELECT HUID "
			+ "FROM ( "
			+ "SELECT FIRST_VALUE(PARENT_HU_ID) OVER (ORDER BY CONTAINERIZATION_DT) AS HUID "
			+ "FROM HU_IN_HU WHERE CHILD_HU_ID IN ( SELECT HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ? ) "
			+ "UNION "
			+ "SELECT HU_ID AS HUID FROM HU_IN_MOVEMENT WHERE HU_ID IN ( SELECT HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ? )  AND ORI_FAC_ID = ? ) VW)";

	public static final String SELECT_IS_INBOUND_HU = "SELECT HU_STATUS, HU_BROKEN_FLAG FROM HANDLING_UNIT WHERE HU_ID = ? AND "
			+ "ORI_FAC_ID != ? AND " + "HUCA_DT IS NOT NULL";

	public static final String INSERT_HU_IN_MOVEMENT = "INSERT INTO HU_IN_MOVEMENT(HU_ID, MOVEMENT_ID, ORI_FAC_ID,"
			+ " MVMT_SCHD_DEPARTURE_DT, DEST_FAC_ID) "
			+ " SELECT ?, MOVEMENT_ID, ORI_FAC_ID, MVMT_SCHD_DEPARTURE_DT,"
			+ " DEST_FAC_ID FROM MOVEMENT WHERE MOVEMENT_ID = ?";

	public static final String INSERT_HU_IN_MOVEMENT_DOC = "INSERT INTO HU_IN_MVMT_DOC(HU_ID, MD_ID) "
			+ "SELECT ?, ? FROM MOVEMENT WHERE MOVEMENT_ID = ?";

	public static final String SELECT_HU_WITH_UNASSIGNED_MOVEMENT = "SELECT HU_ID, PHYSICAL_NAME, HU_TYPE_CODE, DEST_FAC_ID, HU_FLAG, HU_STATUS FROM HANDLING_UNIT WHERE "
			+ "ORI_FAC_ID = ? "
			+ "AND HU_STATUS != ? "
			+ "AND HU_STATUS != 'N' "
			+ "AND HU_ID NOT IN (SELECT CHILD_HU_ID FROM HU_IN_HU) "
			+ "AND HU_ID NOT IN (SELECT HU_ID FROM HU_IN_MOVEMENT) "
			+ "AND HU_ID IN "
			+ "( SELECT DISTINCT HU_ID FROM "
			+ "( SELECT DISTINCT PARENT_HU_ID AS HU_ID FROM HU_IN_HU UNION "
			+ "SELECT DISTINCT HU_ID FROM PIECE_IN_HU UNION "
			+ "SELECT DISTINCT HU_ID FROM SHIPMENT_IN_HU))";

	/*
	 * "SELECT HU_ID, HU_STATUS FROM HANDLING_UNIT WHERE " + "ORI_FAC_ID = ? " +
	 * "AND HU_ID NOT IN (SELECT CHILD_HU_ID HU_ID FROM HU_IN_HU) " +
	 * "AND HU_ID NOT IN (SELECT HU_ID FROM HU_IN_MOVEMENT) " +
	 * "AND HU_ID IN ( " + "SELECT DISTINCT HU_ID FROM ( " +
	 * "SELECT PARENT_HU_ID AS HU_ID, COUNT(1) AS CNT FROM HU_IN_HU GROUP BY PARENT_HU_ID HAVING COUNT(1) > 0 "
	 * + "UNION " +
	 * "SELECT HU_ID, COUNT(1)  AS CNT FROM SHIPMENT_IN_HU GROUP BY HU_ID HAVING COUNT(1) > 0 "
	 * + "UNION " +
	 * "SELECT HU_ID, COUNT(1)  AS CNT FROM PIECE_IN_HU GROUP BY HU_ID HAVING COUNT(1) > 0 ))"
	 * ;
	 */

	public static final String SELECT_PARENT_HU_LIST = "SELECT DISTINCT HU_ID FROM("
			+ "SELECT PARENT_HU_ID HU_ID FROM HU_IN_HU START WITH "
			+ "CHILD_HU_ID IN (SELECT HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ?) "
			+ "CONNECT BY PRIOR PARENT_HU_ID = CHILD_HU_ID "
			+ "UNION "
			+ "SELECT HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ?)";

	public static final String SELECT_PARENT_HU_LIST_FOR_HU = "SELECT DISTINCT HU_ID FROM( "
			+ "SELECT PARENT_HU_ID HU_ID FROM HU_IN_HU START WITH "
			+ "CHILD_HU_ID = ? "
			+ "CONNECT BY PRIOR PARENT_HU_ID = CHILD_HU_ID "
			+ "UNION "
			+ "SELECT PARENT_HU_ID HU_ID FROM HU_IN_HU)";

	//Not for direct parent
	public static final String SELECT_TOP_LEVEL_HU_FOR_HU = "SELECT DISTINCT FIRST_VALUE(PARENT_HU_ID) OVER "
			+ "(ORDER BY LEVEL DESC) HU_ID FROM HU_IN_HU START WITH "
			+ "	CHILD_HU_ID = ? "
			+ "CONNECT BY PRIOR PARENT_HU_ID = CHILD_HU_ID";

	//Not for direct parent
	public static final String SELECT_TOP_LEVEL_HU_FOR_PIECE = "SELECT DISTINCT FIRST_VALUE(PARENT_HU_ID) OVER "
			+ "(ORDER BY LEVEL DESC) HU_ID FROM HU_IN_HU START WITH "
			+ "CHILD_HU_ID = (SELECT DISTINCT "
			+ "FIRST_VALUE(HU_ID) OVER (ORDER BY CONTAINERIZATION_DT DESC) HU_ID "
			+ "FROM PIECE_IN_HU	WHERE PIECE_ID = ?) "
			+ "CONNECT BY PRIOR PARENT_HU_ID = CHILD_HU_ID";

	//Not for direct parent
	public static final String SELECT_TOP_LEVEL_HU_FOR_SHIPMENT = "SELECT HU_ID FROM ( "
			+ "SELECT DISTINCT (PARENT_HU_ID) HU_ID "
			+ "FROM HU_IN_HU START WITH "
			+ "CHILD_HU_ID IN (SELECT DISTINCT (HU_ID) "
			+ "FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ?) "
			+ "CONNECT BY PRIOR PARENT_HU_ID = CHILD_HU_ID"
			+ ") WHERE HU_ID NOT IN (SELECT CHILD_HU_ID FROM HU_IN_HU)";

	public static final String SELECT_LATEST_CONTAINERIZATION_FOR_HU = "SELECT COUNT(*) FROM HANDLING_UNIT WHERE HU_ID IN("
			+ "SELECT DISTINCT FIRST_VALUE(PARENT_HU_ID) OVER "
			+ "(ORDER BY CONTAINERIZATION_DT DESC) HU_ID FROM HU_IN_HU "
			+ "WHERE CHILD_HU_ID = ?) AND ORI_FAC_ID = ?";

	public static final String SELECT_LATEST_CONTAINERIZATION_FOR_PIECE = "SELECT COUNT(*) FROM HANDLING_UNIT WHERE HU_ID IN( "
			+ "SELECT DISTINCT FIRST_VALUE(HU_ID) OVER "
			+ "(ORDER BY CONTAINERIZATION_DT DESC) HU_ID FROM PIECE_IN_HU "
			+ "WHERE PIECE_ID = ?) AND ORI_FAC_ID = ?";

	public static final String SELECT_LATEST_LOCAL_MOVEMENT_FOR_HU = "SELECT COUNT(*) FROM HANDLING_UNIT WHERE HU_ID IN("
			+ "SELECT DISTINCT FIRST_VALUE(HU_ID) OVER (ORDER BY CREATED_DT DESC) HU_ID "
			+ "FROM HU_IN_MOVEMENT WHERE HU_ID=? AND ORI_FAC_ID=?)";

	public static String SELECT_PARENT_HU_ID_BY_SHIPMENT_ID = "SELECT distinct(hu_id) from shipment_in_hu where shipment_id=?";

	public static String SELECT_PARENT_HU_ID_BY_PIECE_ID = "SELECT distinct(hu_id) from piece_in_hu where piece_id=?";

	public static final String SELECT_HU_ACTUAL_PROFILE_PRODUCT = "SELECT * FROM HU_ACTUAL_PROFILE_PRODUCT WHERE HU_PLANNED_PROFILE_CODE = ? AND "
			+ "HU_PLANNED_PROFILE_ORI_FAC_ID = ? AND HU_ID = ?";

	public static final String SELECT_HU_TYPE_MATRIX = "SELECT BAGABLE_HU_TYPE FROM HU_TYPE_MATRIX WHERE HU_TYPE_CODE = ?";

	public static String SELECT_CONTAINERIZED_PARENT_HU_ID_BY_SHIPMENT_ID = "SELECT distinct(hu_id) from shipment_in_hu where shipment_id=? and decontainerization_dt IS NULL";

	public static final String DELETE_HU_IN_MOVEMENT = "DELETE FROM HU_IN_MOVEMENT WHERE MOVEMENT_ID = ? AND ORI_FAC_ID = ? AND HU_ID = ?";

	public static final String UPDATE_HU_VALUES = "UPDATE HANDLING_UNIT SET HU_NET_WEIGHT = HU_NET_WEIGHT + ?, "
			+ "HU_TARE_WEIGHT = HU_TARE_WEIGHT + ?, "
			+ "HU_TOTAL_WEIGHT = HU_TOTAL_WEIGHT + ?, "
			+ "HU_PIECE_COUNT = HU_PIECE_COUNT + ? "
			+ "WHERE HU_ID = ? AND ORI_FAC_ID = ?";

	public static final String INSERT_INTO_ACTUAL_FROM_PLANNED = "INSERT INTO HU_ACTUAL_PROFILE_PRODUCT(HU_ID, PRODUCT_CONTENT_CODE, MIN_SHIPMENT_DECLARED_VALUE, MAX_SHIPMENT_DECLARED_VALUE, "
			+ "HU_PLANNED_PROFILE_CODE,HU_PLANNED_PROFILE_ORI_FAC_ID, SHP_DEST_CO_CD, SHP_DEST_SVA_CD, SHP_DEST_FAC_CD, "
			+ "MIN_SHIPMENT_WEIGHT, MAX_SHIPMENT_WEIGHT) "
			+ "SELECT ?, HP.PRODUCT_CONTENT_CODE, HP.MIN_SHIPMENT_DECLARED_VALUE, HP.MAX_SHIPMENT_DECLARED_VALUE, "
			+ "HP.HU_PLANNED_PROFILE_CODE,HP.HU_PLANNED_PROFILE_ORI_FAC_ID, HP.SHP_DEST_CO_CD, HP.SHP_DEST_SVA_CD, HP.SHP_DEST_FAC_CD, "
			+ "HP.MIN_SHIPMENT_WEIGHT, HP.MAX_SHIPMENT_WEIGHT FROM HU_PLANNED_PROFILE_PRODUCT HP "
			+ "WHERE HP.HU_PLANNED_PROFILE_CODE || HP.HU_PLANNED_PROFILE_ORI_FAC_ID = ( SELECT "
			+ "HU_PLANNED_PROFILE_CODE || HU_PLANNED_PROFILE_ORI_FAC_ID FROM HANDLING_UNIT WHERE HU_ID = ? AND ORI_FAC_ID = ? )";

	public static final String UPDATE_HANDLING_UNIT_FROM_PLANNED = "UPDATE HANDLING_UNIT hu SET (MIN_GROSS_WEIGHT, MAX_GROSS_WEIGHT, IMAGE_REQUIRED, PIECE_LIMIT, "
			+ "DECLARABLE, IS_VALIDATE, NON_DECLARABLE) = (SELECT MIN_GROSS_WEIGHT, MAX_GROSS_WEIGHT, IMAGE_REQUIRED, PIECE_LIMIT, "
			+ "DECLARABLE, IS_VALIDATED, NON_DECLARABLE FROM HU_PLANNED_PROFILE HUPP "
			+ "WHERE HU.HU_PLANNED_PROFILE_CODE = HUPP.HU_PLANNED_PROFILE_CODE AND HU.ORI_FAC_ID = HUPP.HUPP_ORI_FAC_ID) WHERE HU.HU_ID = ? "
			+ "and hu.ori_fac_id = ?";

	public static final String SELECT_REASON_BY_TYPE() {
		return "SELECT REASON_CODE, REASON_DESC FROM REASON WHERE REASON_TYPE = ? ";
	}

	public static final String SELECT_LIST_OF_HU_TYPE = "SELECT HU_TYPE_CODE FROM HANDLING_UNIT WHERE HU_ID IN (SELECT CHILD_HU_ID FROM HU_IN_HU WHERE PARENT_HU_ID = ?)";

	public static final String SELECT_HU_HUINHU()
	{
		return "SELECT PARENT_HU_ID FROM HU_IN_HU WHERE CHILD_HU_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}
	public static final String SELECT_HU_SHIPMENTINHU()
	{
		return "SELECT HU_ID FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}
	public static final String SELECT_HU_PIDINHU()
	{
		return "SELECT HU_ID FROM PIECE_IN_HU WHERE PIECE_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}
	public static final String SELECT_MOVEMENT_STATUS()
	{
		return "SELECT B.MVMT_STATUS_CODE FROM HU_IN_MOVEMENT A, MOVEMENT B "
				+ "WHERE A.HU_ID = ? AND A.ORI_FAC_ID = ? AND "
				+ "A.MOVEMENT_ID = B.MOVEMENT_ID";
	}

	public static final String DELETE_PIECEINHU()
	{
		return "DELETE FROM PIECE_IN_HU WHERE PIECE_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_PIECEINHU()
	{
		return "UPDATE PIECE_IN_HU SET DECONTAINERIZATION_DT = ? "
				+ "WHERE PIECE_ID = ? AND DECONTAINERIZATION_DT IS NULL";
	}

	public static final String DELETE_SHIPMENTINHU()
	{
		return "DELETE FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}

	public static final String DELETE_SHIPMENTINHU_WITHHU()
	{
		return "DELETE FROM SHIPMENT_IN_HU WHERE SHIPMENT_ID = ? AND "
				+ "HU_ID = ? AND DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_SHIPMENTINHU()
	{
		return "UPDATE SHIPMENT_IN_HU SET DECONTAINERIZATION_DT = ? "
				+ "WHERE SHIPMENT_ID = ? AND DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_SHIPMENTINHU_WITHHU()
	{
		return "UPDATE SHIPMENT_IN_HU SET DECONTAINERIZATION_DT = ? "
				+ "WHERE SHIPMENT_ID = ? AND HU_ID = ? AND DECONTAINERIZATION_DT IS NULL";
	}

	public static final String DELETE_HUINHU()
	{
		return "DELETE FROM HU_IN_HU WHERE CHILD_HU_ID = ? AND "
				+ "DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_HUINHU()
	{
		return "UPDATE HU_IN_HU SET DECONTAINERIZATION_DT = ? "
				+ "WHERE CHILD_HU_ID = ? AND DECONTAINERIZATION_DT IS NULL";
	}

	public static final String DELETE_HUINMOVEMENT()
	{   return "DELETE FROM HU_IN_MOVEMENT WHERE HU_ID = ? AND "
			+ "HIM_DECONTAINERIZATION_DT IS NULL";
	}

	public static final String DELETE_HUINMOVEMENTDOC()
	{   return "DELETE FROM HU_IN_MVMT_DOC WHERE HU_ID = ? AND "
			+ "HIMD_DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_HUINMOVEMENT()
	{   return "UPDATE HU_IN_MOVEMENT SET HIM_DECONTAINERIZATION_DT = ? "
			+ "WHERE HU_ID = ? AND "
			+ "HIM_DECONTAINERIZATION_DT IS NULL";
	}

	public static final String UPDATE_HUINMOVEMENTDOC()
	{  return "UPDATE HU_IN_MVMT_DOC SET HIMD_DECONTAINERIZATION_DT = ? "
			+ "WHERE HU_ID = ? AND "
			+ "HIMD_DECONTAINERIZATION_DT IS NULL";
	}

	public static final String SELECT_PRODUCT_CONTENT = "SELECT * FROM PRODUCT_CONTENT WHERE "
			+ "PRODUCT_CONTENT_CODE = ?";

	public static final String SELECT_HU_EVENT_STOP_INTERCEPT = "SELECT * FROM HU_EVENT WHERE "
			+ "HU_ID = ? AND EVENT_TYPE_CODE = 'STCRT' AND OVERRIDE_FLAG = 'N'";

	public static final String UPDATE_OVERRIDE_STOP_INTERCEPT = "UPDATE HU_EVENT SET OVERRIDE_FLAG = 'Y' "
			+ "WHERE HU_ID = ? AND EVENT_TYPE_CODE = 'STCRT'";
	
}
